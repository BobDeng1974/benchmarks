// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpc_service.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "grpc_service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* AnswerRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AnswerRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* AnswerReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AnswerReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* EmptyRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EmptyRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* BlobResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BlobResponse_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_grpc_5fservice_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_grpc_5fservice_2eproto() {
  protobuf_AddDesc_grpc_5fservice_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "grpc_service.proto");
  GOOGLE_CHECK(file != NULL);
  AnswerRequest_descriptor_ = file->message_type(0);
  static const int AnswerRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnswerRequest, number_),
  };
  AnswerRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AnswerRequest_descriptor_,
      AnswerRequest::internal_default_instance(),
      AnswerRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(AnswerRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnswerRequest, _internal_metadata_));
  AnswerReply_descriptor_ = file->message_type(1);
  static const int AnswerReply_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnswerReply, result_),
  };
  AnswerReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AnswerReply_descriptor_,
      AnswerReply::internal_default_instance(),
      AnswerReply_offsets_,
      -1,
      -1,
      -1,
      sizeof(AnswerReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnswerReply, _internal_metadata_));
  EmptyRequest_descriptor_ = file->message_type(2);
  static const int EmptyRequest_offsets_[1] = {
  };
  EmptyRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EmptyRequest_descriptor_,
      EmptyRequest::internal_default_instance(),
      EmptyRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(EmptyRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmptyRequest, _internal_metadata_));
  BlobResponse_descriptor_ = file->message_type(3);
  static const int BlobResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlobResponse, data_),
  };
  BlobResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BlobResponse_descriptor_,
      BlobResponse::internal_default_instance(),
      BlobResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(BlobResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlobResponse, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_grpc_5fservice_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AnswerRequest_descriptor_, AnswerRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AnswerReply_descriptor_, AnswerReply::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EmptyRequest_descriptor_, EmptyRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BlobResponse_descriptor_, BlobResponse::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_grpc_5fservice_2eproto() {
  AnswerRequest_default_instance_.Shutdown();
  delete AnswerRequest_reflection_;
  AnswerReply_default_instance_.Shutdown();
  delete AnswerReply_reflection_;
  EmptyRequest_default_instance_.Shutdown();
  delete EmptyRequest_reflection_;
  BlobResponse_default_instance_.Shutdown();
  delete BlobResponse_reflection_;
}

void protobuf_InitDefaults_grpc_5fservice_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  AnswerRequest_default_instance_.DefaultConstruct();
  AnswerReply_default_instance_.DefaultConstruct();
  EmptyRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  BlobResponse_default_instance_.DefaultConstruct();
  AnswerRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  AnswerReply_default_instance_.get_mutable()->InitAsDefaultInstance();
  EmptyRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  BlobResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_grpc_5fservice_2eproto_once_);
void protobuf_InitDefaults_grpc_5fservice_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_grpc_5fservice_2eproto_once_,
                 &protobuf_InitDefaults_grpc_5fservice_2eproto_impl);
}
void protobuf_AddDesc_grpc_5fservice_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_grpc_5fservice_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022grpc_service.proto\"\037\n\rAnswerRequest\022\016\n"
    "\006number\030\001 \001(\005\"\035\n\013AnswerReply\022\016\n\006result\030\001"
    " \001(\005\"\016\n\014EmptyRequest\"\034\n\014BlobResponse\022\014\n\004"
    "data\030\001 \001(\0142p\n\024GrpcServiceBenchmark\022,\n\nge"
    "t_answer\022\016.AnswerRequest\032\014.AnswerReply\"\000"
    "\022*\n\010get_blob\022\r.EmptyRequest\032\r.BlobRespon"
    "se\"\000b\006proto3", 252);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "grpc_service.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_grpc_5fservice_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_grpc_5fservice_2eproto_once_);
void protobuf_AddDesc_grpc_5fservice_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_grpc_5fservice_2eproto_once_,
                 &protobuf_AddDesc_grpc_5fservice_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_grpc_5fservice_2eproto {
  StaticDescriptorInitializer_grpc_5fservice_2eproto() {
    protobuf_AddDesc_grpc_5fservice_2eproto();
  }
} static_descriptor_initializer_grpc_5fservice_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AnswerRequest::kNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AnswerRequest::AnswerRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_grpc_5fservice_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnswerRequest)
}

void AnswerRequest::InitAsDefaultInstance() {
}

AnswerRequest::AnswerRequest(const AnswerRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnswerRequest)
}

void AnswerRequest::SharedCtor() {
  number_ = 0;
  _cached_size_ = 0;
}

AnswerRequest::~AnswerRequest() {
  // @@protoc_insertion_point(destructor:AnswerRequest)
  SharedDtor();
}

void AnswerRequest::SharedDtor() {
}

void AnswerRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AnswerRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AnswerRequest_descriptor_;
}

const AnswerRequest& AnswerRequest::default_instance() {
  protobuf_InitDefaults_grpc_5fservice_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<AnswerRequest> AnswerRequest_default_instance_;

AnswerRequest* AnswerRequest::New(::google::protobuf::Arena* arena) const {
  AnswerRequest* n = new AnswerRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AnswerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:AnswerRequest)
  number_ = 0;
}

bool AnswerRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnswerRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 number = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &number_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnswerRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnswerRequest)
  return false;
#undef DO_
}

void AnswerRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnswerRequest)
  // optional int32 number = 1;
  if (this->number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->number(), output);
  }

  // @@protoc_insertion_point(serialize_end:AnswerRequest)
}

::google::protobuf::uint8* AnswerRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AnswerRequest)
  // optional int32 number = 1;
  if (this->number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->number(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:AnswerRequest)
  return target;
}

size_t AnswerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AnswerRequest)
  size_t total_size = 0;

  // optional int32 number = 1;
  if (this->number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->number());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AnswerRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AnswerRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AnswerRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AnswerRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AnswerRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AnswerRequest)
    UnsafeMergeFrom(*source);
  }
}

void AnswerRequest::MergeFrom(const AnswerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AnswerRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void AnswerRequest::UnsafeMergeFrom(const AnswerRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.number() != 0) {
    set_number(from.number());
  }
}

void AnswerRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AnswerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnswerRequest::CopyFrom(const AnswerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AnswerRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool AnswerRequest::IsInitialized() const {

  return true;
}

void AnswerRequest::Swap(AnswerRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AnswerRequest::InternalSwap(AnswerRequest* other) {
  std::swap(number_, other->number_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AnswerRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AnswerRequest_descriptor_;
  metadata.reflection = AnswerRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AnswerRequest

// optional int32 number = 1;
void AnswerRequest::clear_number() {
  number_ = 0;
}
::google::protobuf::int32 AnswerRequest::number() const {
  // @@protoc_insertion_point(field_get:AnswerRequest.number)
  return number_;
}
void AnswerRequest::set_number(::google::protobuf::int32 value) {
  
  number_ = value;
  // @@protoc_insertion_point(field_set:AnswerRequest.number)
}

inline const AnswerRequest* AnswerRequest::internal_default_instance() {
  return &AnswerRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AnswerReply::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AnswerReply::AnswerReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_grpc_5fservice_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnswerReply)
}

void AnswerReply::InitAsDefaultInstance() {
}

AnswerReply::AnswerReply(const AnswerReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnswerReply)
}

void AnswerReply::SharedCtor() {
  result_ = 0;
  _cached_size_ = 0;
}

AnswerReply::~AnswerReply() {
  // @@protoc_insertion_point(destructor:AnswerReply)
  SharedDtor();
}

void AnswerReply::SharedDtor() {
}

void AnswerReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AnswerReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AnswerReply_descriptor_;
}

const AnswerReply& AnswerReply::default_instance() {
  protobuf_InitDefaults_grpc_5fservice_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<AnswerReply> AnswerReply_default_instance_;

AnswerReply* AnswerReply::New(::google::protobuf::Arena* arena) const {
  AnswerReply* n = new AnswerReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AnswerReply::Clear() {
// @@protoc_insertion_point(message_clear_start:AnswerReply)
  result_ = 0;
}

bool AnswerReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnswerReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnswerReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnswerReply)
  return false;
#undef DO_
}

void AnswerReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnswerReply)
  // optional int32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // @@protoc_insertion_point(serialize_end:AnswerReply)
}

::google::protobuf::uint8* AnswerReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AnswerReply)
  // optional int32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:AnswerReply)
  return target;
}

size_t AnswerReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AnswerReply)
  size_t total_size = 0;

  // optional int32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AnswerReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AnswerReply)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AnswerReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AnswerReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AnswerReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AnswerReply)
    UnsafeMergeFrom(*source);
  }
}

void AnswerReply::MergeFrom(const AnswerReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AnswerReply)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void AnswerReply::UnsafeMergeFrom(const AnswerReply& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void AnswerReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AnswerReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnswerReply::CopyFrom(const AnswerReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AnswerReply)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool AnswerReply::IsInitialized() const {

  return true;
}

void AnswerReply::Swap(AnswerReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AnswerReply::InternalSwap(AnswerReply* other) {
  std::swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AnswerReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AnswerReply_descriptor_;
  metadata.reflection = AnswerReply_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AnswerReply

// optional int32 result = 1;
void AnswerReply::clear_result() {
  result_ = 0;
}
::google::protobuf::int32 AnswerReply::result() const {
  // @@protoc_insertion_point(field_get:AnswerReply.result)
  return result_;
}
void AnswerReply::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:AnswerReply.result)
}

inline const AnswerReply* AnswerReply::internal_default_instance() {
  return &AnswerReply_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EmptyRequest::EmptyRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_grpc_5fservice_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:EmptyRequest)
}

void EmptyRequest::InitAsDefaultInstance() {
}

EmptyRequest::EmptyRequest(const EmptyRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:EmptyRequest)
}

void EmptyRequest::SharedCtor() {
  _cached_size_ = 0;
}

EmptyRequest::~EmptyRequest() {
  // @@protoc_insertion_point(destructor:EmptyRequest)
  SharedDtor();
}

void EmptyRequest::SharedDtor() {
}

void EmptyRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EmptyRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EmptyRequest_descriptor_;
}

const EmptyRequest& EmptyRequest::default_instance() {
  protobuf_InitDefaults_grpc_5fservice_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<EmptyRequest> EmptyRequest_default_instance_;

EmptyRequest* EmptyRequest::New(::google::protobuf::Arena* arena) const {
  EmptyRequest* n = new EmptyRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EmptyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:EmptyRequest)
}

bool EmptyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:EmptyRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:EmptyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:EmptyRequest)
  return false;
#undef DO_
}

void EmptyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:EmptyRequest)
  // @@protoc_insertion_point(serialize_end:EmptyRequest)
}

::google::protobuf::uint8* EmptyRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:EmptyRequest)
  // @@protoc_insertion_point(serialize_to_array_end:EmptyRequest)
  return target;
}

size_t EmptyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:EmptyRequest)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EmptyRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:EmptyRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const EmptyRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EmptyRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:EmptyRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:EmptyRequest)
    UnsafeMergeFrom(*source);
  }
}

void EmptyRequest::MergeFrom(const EmptyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:EmptyRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void EmptyRequest::UnsafeMergeFrom(const EmptyRequest& from) {
  GOOGLE_DCHECK(&from != this);
}

void EmptyRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:EmptyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EmptyRequest::CopyFrom(const EmptyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:EmptyRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool EmptyRequest::IsInitialized() const {

  return true;
}

void EmptyRequest::Swap(EmptyRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EmptyRequest::InternalSwap(EmptyRequest* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EmptyRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EmptyRequest_descriptor_;
  metadata.reflection = EmptyRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EmptyRequest

inline const EmptyRequest* EmptyRequest::internal_default_instance() {
  return &EmptyRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BlobResponse::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BlobResponse::BlobResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_grpc_5fservice_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:BlobResponse)
}

void BlobResponse::InitAsDefaultInstance() {
}

BlobResponse::BlobResponse(const BlobResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:BlobResponse)
}

void BlobResponse::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

BlobResponse::~BlobResponse() {
  // @@protoc_insertion_point(destructor:BlobResponse)
  SharedDtor();
}

void BlobResponse::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BlobResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BlobResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BlobResponse_descriptor_;
}

const BlobResponse& BlobResponse::default_instance() {
  protobuf_InitDefaults_grpc_5fservice_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<BlobResponse> BlobResponse_default_instance_;

BlobResponse* BlobResponse::New(::google::protobuf::Arena* arena) const {
  BlobResponse* n = new BlobResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BlobResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:BlobResponse)
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool BlobResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BlobResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BlobResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BlobResponse)
  return false;
#undef DO_
}

void BlobResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BlobResponse)
  // optional bytes data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->data(), output);
  }

  // @@protoc_insertion_point(serialize_end:BlobResponse)
}

::google::protobuf::uint8* BlobResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BlobResponse)
  // optional bytes data = 1;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->data(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:BlobResponse)
  return target;
}

size_t BlobResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BlobResponse)
  size_t total_size = 0;

  // optional bytes data = 1;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BlobResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BlobResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const BlobResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BlobResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BlobResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BlobResponse)
    UnsafeMergeFrom(*source);
  }
}

void BlobResponse::MergeFrom(const BlobResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BlobResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void BlobResponse::UnsafeMergeFrom(const BlobResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void BlobResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BlobResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlobResponse::CopyFrom(const BlobResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BlobResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool BlobResponse::IsInitialized() const {

  return true;
}

void BlobResponse::Swap(BlobResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BlobResponse::InternalSwap(BlobResponse* other) {
  data_.Swap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BlobResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BlobResponse_descriptor_;
  metadata.reflection = BlobResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BlobResponse

// optional bytes data = 1;
void BlobResponse::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BlobResponse::data() const {
  // @@protoc_insertion_point(field_get:BlobResponse.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BlobResponse::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BlobResponse.data)
}
void BlobResponse::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BlobResponse.data)
}
void BlobResponse::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BlobResponse.data)
}
::std::string* BlobResponse::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:BlobResponse.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BlobResponse::release_data() {
  // @@protoc_insertion_point(field_release:BlobResponse.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BlobResponse::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:BlobResponse.data)
}

inline const BlobResponse* BlobResponse::internal_default_instance() {
  return &BlobResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
