// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpc_service.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "grpc/grpc_service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* AnswerRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AnswerRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* AnswerReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AnswerReply_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_grpc_5fservice_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_grpc_5fservice_2eproto() {
  protobuf_AddDesc_grpc_5fservice_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "grpc_service.proto");
  GOOGLE_CHECK(file != NULL);
  AnswerRequest_descriptor_ = file->message_type(0);
  static const int AnswerRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnswerRequest, number_),
  };
  AnswerRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AnswerRequest_descriptor_,
      AnswerRequest::default_instance_,
      AnswerRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(AnswerRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnswerRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnswerRequest, _is_default_instance_));
  AnswerReply_descriptor_ = file->message_type(1);
  static const int AnswerReply_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnswerReply, result_),
  };
  AnswerReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AnswerReply_descriptor_,
      AnswerReply::default_instance_,
      AnswerReply_offsets_,
      -1,
      -1,
      -1,
      sizeof(AnswerReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnswerReply, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnswerReply, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_grpc_5fservice_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AnswerRequest_descriptor_, &AnswerRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AnswerReply_descriptor_, &AnswerReply::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_grpc_5fservice_2eproto() {
  delete AnswerRequest::default_instance_;
  delete AnswerRequest_reflection_;
  delete AnswerReply::default_instance_;
  delete AnswerReply_reflection_;
}

void protobuf_AddDesc_grpc_5fservice_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_grpc_5fservice_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022grpc_service.proto\"\037\n\rAnswerRequest\022\016\n"
    "\006number\030\001 \001(\005\"\035\n\013AnswerReply\022\016\n\006result\030\001"
    " \001(\0052D\n\024GrpcServiceBenchmark\022,\n\nget_answ"
    "er\022\016.AnswerRequest\032\014.AnswerReply\"\000b\006prot"
    "o3", 162);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "grpc_service.proto", &protobuf_RegisterTypes);
  AnswerRequest::default_instance_ = new AnswerRequest();
  AnswerReply::default_instance_ = new AnswerReply();
  AnswerRequest::default_instance_->InitAsDefaultInstance();
  AnswerReply::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_grpc_5fservice_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_grpc_5fservice_2eproto {
  StaticDescriptorInitializer_grpc_5fservice_2eproto() {
    protobuf_AddDesc_grpc_5fservice_2eproto();
  }
} static_descriptor_initializer_grpc_5fservice_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AnswerRequest::kNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AnswerRequest::AnswerRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnswerRequest)
}

void AnswerRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

AnswerRequest::AnswerRequest(const AnswerRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnswerRequest)
}

void AnswerRequest::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  number_ = 0;
}

AnswerRequest::~AnswerRequest() {
  // @@protoc_insertion_point(destructor:AnswerRequest)
  SharedDtor();
}

void AnswerRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AnswerRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AnswerRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AnswerRequest_descriptor_;
}

const AnswerRequest& AnswerRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_grpc_5fservice_2eproto();
  return *default_instance_;
}

AnswerRequest* AnswerRequest::default_instance_ = NULL;

AnswerRequest* AnswerRequest::New(::google::protobuf::Arena* arena) const {
  AnswerRequest* n = new AnswerRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AnswerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:AnswerRequest)
  number_ = 0;
}

bool AnswerRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnswerRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 number = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &number_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnswerRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnswerRequest)
  return false;
#undef DO_
}

void AnswerRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnswerRequest)
  // optional int32 number = 1;
  if (this->number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->number(), output);
  }

  // @@protoc_insertion_point(serialize_end:AnswerRequest)
}

::google::protobuf::uint8* AnswerRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnswerRequest)
  // optional int32 number = 1;
  if (this->number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->number(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:AnswerRequest)
  return target;
}

int AnswerRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:AnswerRequest)
  int total_size = 0;

  // optional int32 number = 1;
  if (this->number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->number());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AnswerRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AnswerRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AnswerRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AnswerRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AnswerRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AnswerRequest)
    MergeFrom(*source);
  }
}

void AnswerRequest::MergeFrom(const AnswerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AnswerRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.number() != 0) {
    set_number(from.number());
  }
}

void AnswerRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AnswerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnswerRequest::CopyFrom(const AnswerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AnswerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnswerRequest::IsInitialized() const {

  return true;
}

void AnswerRequest::Swap(AnswerRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AnswerRequest::InternalSwap(AnswerRequest* other) {
  std::swap(number_, other->number_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AnswerRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AnswerRequest_descriptor_;
  metadata.reflection = AnswerRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AnswerRequest

// optional int32 number = 1;
void AnswerRequest::clear_number() {
  number_ = 0;
}
 ::google::protobuf::int32 AnswerRequest::number() const {
  // @@protoc_insertion_point(field_get:AnswerRequest.number)
  return number_;
}
 void AnswerRequest::set_number(::google::protobuf::int32 value) {

  number_ = value;
  // @@protoc_insertion_point(field_set:AnswerRequest.number)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AnswerReply::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AnswerReply::AnswerReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnswerReply)
}

void AnswerReply::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

AnswerReply::AnswerReply(const AnswerReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnswerReply)
}

void AnswerReply::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  result_ = 0;
}

AnswerReply::~AnswerReply() {
  // @@protoc_insertion_point(destructor:AnswerReply)
  SharedDtor();
}

void AnswerReply::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AnswerReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AnswerReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AnswerReply_descriptor_;
}

const AnswerReply& AnswerReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_grpc_5fservice_2eproto();
  return *default_instance_;
}

AnswerReply* AnswerReply::default_instance_ = NULL;

AnswerReply* AnswerReply::New(::google::protobuf::Arena* arena) const {
  AnswerReply* n = new AnswerReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AnswerReply::Clear() {
// @@protoc_insertion_point(message_clear_start:AnswerReply)
  result_ = 0;
}

bool AnswerReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnswerReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnswerReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnswerReply)
  return false;
#undef DO_
}

void AnswerReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnswerReply)
  // optional int32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // @@protoc_insertion_point(serialize_end:AnswerReply)
}

::google::protobuf::uint8* AnswerReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnswerReply)
  // optional int32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:AnswerReply)
  return target;
}

int AnswerReply::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:AnswerReply)
  int total_size = 0;

  // optional int32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AnswerReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AnswerReply)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AnswerReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AnswerReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AnswerReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AnswerReply)
    MergeFrom(*source);
  }
}

void AnswerReply::MergeFrom(const AnswerReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AnswerReply)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void AnswerReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AnswerReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnswerReply::CopyFrom(const AnswerReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AnswerReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnswerReply::IsInitialized() const {

  return true;
}

void AnswerReply::Swap(AnswerReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AnswerReply::InternalSwap(AnswerReply* other) {
  std::swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AnswerReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AnswerReply_descriptor_;
  metadata.reflection = AnswerReply_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AnswerReply

// optional int32 result = 1;
void AnswerReply::clear_result() {
  result_ = 0;
}
 ::google::protobuf::int32 AnswerReply::result() const {
  // @@protoc_insertion_point(field_get:AnswerReply.result)
  return result_;
}
 void AnswerReply::set_result(::google::protobuf::int32 value) {

  result_ = value;
  // @@protoc_insertion_point(field_set:AnswerReply.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
